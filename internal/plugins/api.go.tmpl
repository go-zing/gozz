import (
	{{ range .Imports }} {{ .Name }} "{{ .Path }}"
	{{ end }}
)

var _  = context.Context(nil)

type Apis struct {
    {{ range .Interfaces }} {{ .FieldName }} {{ .TypeName }}
    {{ end }}
}

func (s Apis) Iterate(fn func(interface{},[]map[string]interface{})){
	for _,f:=range []func()(interface{},[]map[string]interface{}){
		{{ range .Interfaces }} s._{{ .FieldName }},
		{{ end }}
	}{
		fn(f())
	}
}

{{ range .Interfaces }}
func (s Apis) _{{ .FieldName }}() (interface{},[]map[string]interface{}){
	t := s.{{ .FieldName }}
	return &t,[]map[string]interface{}{	{{ range  .Handlers }}
		{
			"name": "{{ .Name }}",
			"resource": "{{ .Resource }}",
			"options": map[string]string{ {{ range $key,$value := .Options }}
			{{ quote $key }} : {{ quote $value }}, {{ end }}
			},  {{ if .Invoke }}
			"invoke": {{ .Invoke }}, {{ end }}
		},	{{ end }}
	}
}
{{ end }}