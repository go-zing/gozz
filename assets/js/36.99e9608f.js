(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{323:function(t,s,n){"use strict";n.r(s);var a=n(10),e=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"tag"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tag"}},[t._v("#")]),t._v(" Tag")]),t._v(" "),s("p",[t._v("Manager struct field tag in templating mode.")]),t._v(" "),s("h2",{attrs:{id:"usage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[t._v("#")]),t._v(" Usage")]),t._v(" "),s("h3",{attrs:{id:"annotation"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#annotation"}},[t._v("#")]),t._v(" Annotation")]),t._v(" "),s("p",[s("code",[t._v("+zz:tag:[tag]:[format]")])]),t._v(" "),s("h3",{attrs:{id:"annotation-target"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#annotation-target"}},[t._v("#")]),t._v(" Annotation Target")]),t._v(" "),s("p",[t._v("All "),s("code",[t._v("TypeSpec")]),t._v(" object and struct fields in annotated type.")]),t._v(" "),s("h3",{attrs:{id:"exact-arguments"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#exact-arguments"}},[t._v("#")]),t._v(" Exact Arguments")]),t._v(" "),s("h4",{attrs:{id:"tag-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#tag-2"}},[t._v("#")]),t._v(" "),s("code",[t._v("tag")])]),t._v(" "),s("p",[t._v("Specify tag key, if there are multi key with same value, use "),s("code",[t._v(",")]),t._v(" to separate them.")]),t._v(" "),s("p",[t._v("Example: "),s("span",{pre:!0},[s("code",[t._v("+zz:tag:json,form,bson,sql:{{ snake .FieldName }}")])])]),t._v(" "),s("br"),t._v(" "),s("p",[t._v("Use "),s("code",[t._v("tag")]),t._v(" begins with "),s("code",[t._v("+")]),t._v(", to append same key value.")]),t._v(" "),s("p",[t._v("Example:")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" x\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:tag:json:{{ snake .FieldName }}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" T "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:tag:+json:,omitempty")]),t._v("\n\tObjectId "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"object_id,omitempty"`')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("h4",{attrs:{id:"format"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#format"}},[t._v("#")]),t._v(" "),s("code",[t._v("format")])]),t._v(" "),s("p",[t._v("Specify generate tag value, could use template data contains "),s("code",[t._v("FieldName")]),t._v(" and field doc "),s("code",[t._v("Doc")]),t._v(".\nStrings functions like "),s("code",[t._v("snake")]),t._v(" / "),s("code",[t._v("camel")]),t._v("  are also provided.")]),t._v(" "),s("p",[t._v("Example: "),s("span",{pre:!0},[s("code",[t._v("+zz:tag:json,form,bson,sql:{{ snake .FieldName }}")])])]),t._v(" "),s("h2",{attrs:{id:"examples"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[t._v("#")]),t._v(" Examples")]),t._v(" "),s("h3",{attrs:{id:"example-01"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example-01"}},[t._v("#")]),t._v(" Example-01")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/go-zing/gozz-doc-examples/tree/main/tag01",target:"_blank",rel:"noopener noreferrer"}},[t._v("Example Project"),s("OutboundLink")],1)]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" tag01\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"time"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//go:generate gozz run -p "tag" ./')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:tag:json,bson:{{ snake .FieldName }}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" User "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tId        "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\tName      "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\tAddress   "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\tCreatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time\n\tUpdatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("Use annotation to specify "),s("code",[t._v("json")]),t._v(" "),s("code",[t._v("bson")]),t._v(" in snake case "),s("code",[t._v("FieldName")])]),t._v(" "),s("p",[t._v("执行 "),s("code",[t._v('gozz run -p "tag" ./')])]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" tag01\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"time"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//go:generate gozz run -p "tag" ./')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:tag:json,bson:{{ snake .FieldName }}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" User "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tId        "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"id" json:"id"`')]),t._v("\n\tName      "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"name" json:"name"`')]),t._v("\n\tAddress   "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"address" json:"address"`')]),t._v("\n\tCreatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"created_at" json:"created_at"`')]),t._v("\n\tUpdatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"updated_at" json:"updated_at"`')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("bson")]),t._v(" "),s("code",[t._v("json")]),t._v(" tags were correctly generated.")]),t._v(" "),s("p",[t._v("New tags would follow letter order by key.")]),t._v(" "),s("h3",{attrs:{id:"example-02"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example-02"}},[t._v("#")]),t._v(" Example-02")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/go-zing/gozz-doc-examples/tree/main/tag02",target:"_blank",rel:"noopener noreferrer"}},[t._v("Example Project"),s("OutboundLink")],1)]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" tag02\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"time"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//go:generate gozz run -p "tag" ./')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:tag:json,bson:{{ camel .FieldName }}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" User "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tId        "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"id"`')]),t._v("\n\tName      "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"name"`')]),t._v("\n\tAddress   "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"address"`')]),t._v("\n\tCreatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"created_at"`')]),t._v("\n\tUpdatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"updated_at"`')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("This struct has exist "),s("code",[t._v("json")]),t._v(" tag, use annotation to specify camel case "),s("code",[t._v("json")]),t._v(" "),s("code",[t._v("bson")]),t._v(".")]),t._v(" "),s("p",[t._v("Execute "),s("code",[t._v('gozz run -p "tag" ./')]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" tag02\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"time"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//go:generate gozz run -p "tag" ./')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:tag:json,bson:{{ camel .FieldName }}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" User "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tId        "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"id" bson:"id"`')]),t._v("\n\tName      "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"name" bson:"name"`')]),t._v("\n\tAddress   "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"address" bson:"address"`')]),t._v("\n\tCreatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"createdAt" bson:"createdAt"`')]),t._v("\n\tUpdatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"updatedAt" bson:"updatedAt"`')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("All "),s("code",[t._v("json")]),t._v(" tags were updated as "),s("code",[t._v("camelCase")]),t._v(" and "),s("code",[t._v("bson")]),t._v(" tags were generated.")]),t._v(" "),s("h3",{attrs:{id:"example-03"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example-03"}},[t._v("#")]),t._v(" Example-03")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/go-zing/gozz-doc-examples/tree/main/tag03",target:"_blank",rel:"noopener noreferrer"}},[t._v("Example Project"),s("OutboundLink")],1)]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" tag03\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"time"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//go:generate gozz run -p "tag" ./')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:tag:json,bson:{{ snake .FieldName }}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tUser "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tId        "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\t\tName      "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\t\tAddress   "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\t\tCreatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time\n\t\tUpdatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\tBook "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tId        "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\t\tTitle     "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\t\tCreatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time\n\t\tUpdatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\tOrder "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tId        "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\t\tUserId    "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\t\tBookId    "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\t\tCreatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time\n\t\tUpdatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("These struct do not have any tags.\nUse "),s("code",[t._v("Decl")]),t._v(" scope annotation to specify snake case "),s("code",[t._v("json")]),t._v(" "),s("code",[t._v("bson")]),t._v(".")]),t._v(" "),s("p",[t._v("Execute "),s("code",[t._v('gozz run -p "tag" ./')]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" tag03\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"time"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//go:generate gozz run -p "tag" ./')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:tag:json,bson:{{ snake .FieldName }}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tUser "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tId        "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"id" json:"id"`')]),t._v("\n\t\tName      "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"name" json:"name"`')]),t._v("\n\t\tAddress   "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"address" json:"address"`')]),t._v("\n\t\tCreatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"created_at" json:"created_at"`')]),t._v("\n\t\tUpdatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"updated_at" json:"updated_at"`')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\tBook "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tId        "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"id" json:"id"`')]),t._v("\n\t\tTitle     "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"title" json:"title"`')]),t._v("\n\t\tCreatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"created_at" json:"created_at"`')]),t._v("\n\t\tUpdatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"updated_at" json:"updated_at"`')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\tOrder "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tId        "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"id" json:"id"`')]),t._v("\n\t\tUserId    "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"user_id" json:"user_id"`')]),t._v("\n\t\tBookId    "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"book_id" json:"book_id"`')]),t._v("\n\t\tCreatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"created_at" json:"created_at"`')]),t._v("\n\t\tUpdatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"updated_at" json:"updated_at"`')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("Tags "),s("code",[t._v("bson")]),t._v(" "),s("code",[t._v("json")]),t._v(" were generated in desired format.")]),t._v(" "),s("h3",{attrs:{id:"example-04"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example-04"}},[t._v("#")]),t._v(" Example-04")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/go-zing/gozz-doc-examples/tree/main/tag04",target:"_blank",rel:"noopener noreferrer"}},[t._v("Example Project"),s("OutboundLink")],1)]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" tag04\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"time"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//go:generate gozz run -p "tag" ./')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:tag:json,bson:{{ snake .FieldName }}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tUser "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tId        "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\t\tName      "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\t\tAddress   "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\t\tCreatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time\n\t\tUpdatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:tag:json,bson:{{ camel .FieldName }}")]),t._v("\n\tBook "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tId        "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\t\tTitle     "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\t\tCreatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time\n\t\tUpdatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\tOrder "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tId     "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\t\tUserId "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\t\tBookId "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:tag:json,bson:{{ upper .FieldName | upper }}")]),t._v("\n\t\tCreatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:tag:+json:,omitempty")]),t._v("\n\t\tUpdatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("This example have a little different from "),s("RouterLink",{attrs:{to:"/guide/plugins/tag.html#example-03"}},[t._v("Example-03")]),t._v(" about some struct and field.")],1),t._v(" "),s("p",[t._v("Execute "),s("code",[t._v('gozz run -p "tag" ./')]),t._v(".")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" tag04\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"time"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//go:generate gozz run -p "tag" ./')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:tag:json,bson:{{ snake .FieldName }}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tUser "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tId        "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"id" json:"id"`')]),t._v("\n\t\tName      "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"name" json:"name"`')]),t._v("\n\t\tAddress   "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"address" json:"address"`')]),t._v("\n\t\tCreatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"created_at" json:"created_at"`')]),t._v("\n\t\tUpdatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"updated_at" json:"updated_at"`')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:tag:json,bson:{{ camel .FieldName }}")]),t._v("\n\tBook "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tId        "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"id" json:"id"`')]),t._v("\n\t\tTitle     "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"title" json:"title"`')]),t._v("\n\t\tCreatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"createdAt" json:"createdAt"`')]),t._v("\n\t\tUpdatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"updatedAt" json:"updatedAt"`')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\tOrder "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tId     "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"id" json:"id"`')]),t._v("\n\t\tUserId "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"user_id" json:"user_id"`')]),t._v("\n\t\tBookId "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"book_id" json:"book_id"`')]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:tag:json,bson:{{ snake .FieldName | upper }}")]),t._v("\n\t\tCreatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"CREATED_AT" json:"CREATED_AT"`')]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:tag:+json:,omitempty")]),t._v("\n\t\tUpdatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"updated_at" json:"updated_at,omitempty"`')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("The specify struct and fields were updated as desired.")]),t._v(" "),s("h3",{attrs:{id:"example-05"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example-05"}},[t._v("#")]),t._v(" Example-05")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://github.com/go-zing/gozz-doc-examples/tree/main/tag05",target:"_blank",rel:"noopener noreferrer"}},[t._v("Example Project"),s("OutboundLink")],1)]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" tag05\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"time"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//go:generate gozz run -p "tag" ./')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:tag:json,bson:{{ snake .FieldName }}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tUserStruct "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tId        "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\t\tName      "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\t\tAddress   "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\t\tCreatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time\n\t\tUpdatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time\n\t\tFriends   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tId        "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\t\t\tName      "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\t\t\tAddress   "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\t\t\tCreatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time\n\t\t\tUpdatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\tUserMap "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tId        "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\t\tName      "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\t\tAddress   "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\t\tCreatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time\n\t\tUpdatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\tUserSlice "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tId        "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\t\tName      "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\t\tAddress   "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\t\tCreatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time\n\t\tUpdatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\tUserInterface "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("User")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tId        "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\t\t\tName      "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\t\t\tAddress   "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\t\t\tCreatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time\n\t\t\tUpdatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\tUserFunc "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tId        "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\t\tName      "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\t\tAddress   "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("\n\t\tCreatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time\n\t\tUpdatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("This example shows most common complex types and struct embed.")]),t._v(" "),s("p",[t._v("Execute "),s("code",[t._v('gozz run -p "tag" ./')])]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" tag05\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"time"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v('//go:generate gozz run -p "tag" ./')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:tag:json,bson:{{ snake .FieldName }}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tUserStruct "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tId        "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"id" json:"id"`')]),t._v("\n\t\tName      "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"name" json:"name"`')]),t._v("\n\t\tAddress   "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"address" json:"address"`')]),t._v("\n\t\tCreatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"created_at" json:"created_at"`')]),t._v("\n\t\tUpdatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"updated_at" json:"updated_at"`')]),t._v("\n\t\tFriends   "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tId        "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"id" json:"id"`')]),t._v("\n\t\t\tName      "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"name" json:"name"`')]),t._v("\n\t\t\tAddress   "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"address" json:"address"`')]),t._v("\n\t\t\tCreatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"created_at" json:"created_at"`')]),t._v("\n\t\t\tUpdatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"updated_at" json:"updated_at"`')]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"friends" json:"friends"`')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\tUserMap "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("map")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tId        "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"id" json:"id"`')]),t._v("\n\t\tName      "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"name" json:"name"`')]),t._v("\n\t\tAddress   "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"address" json:"address"`')]),t._v("\n\t\tCreatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"created_at" json:"created_at"`')]),t._v("\n\t\tUpdatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"updated_at" json:"updated_at"`')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\tUserSlice "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tId        "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"id" json:"id"`')]),t._v("\n\t\tName      "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"name" json:"name"`')]),t._v("\n\t\tAddress   "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"address" json:"address"`')]),t._v("\n\t\tCreatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"created_at" json:"created_at"`')]),t._v("\n\t\tUpdatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"updated_at" json:"updated_at"`')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\tUserInterface "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("User")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\tId        "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"id" json:"id"`')]),t._v("\n\t\t\tName      "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"name" json:"name"`')]),t._v("\n\t\t\tAddress   "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"address" json:"address"`')]),t._v("\n\t\t\tCreatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"created_at" json:"created_at"`')]),t._v("\n\t\t\tUpdatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"updated_at" json:"updated_at"`')]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\tUserFunc "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tId        "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"id" json:"id"`')]),t._v("\n\t\tName      "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"name" json:"name"`')]),t._v("\n\t\tAddress   "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v("    "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"address" json:"address"`')]),t._v("\n\t\tCreatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"created_at" json:"created_at"`')]),t._v("\n\t\tUpdatedAt time"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Time "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('`bson:"updated_at" json:"updated_at"`')]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[t._v("All these cases were supported.")])])}),[],!1,null,null,null);s.default=e.exports}}]);