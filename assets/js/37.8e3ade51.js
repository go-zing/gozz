(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{322:function(t,s,a){"use strict";a.r(s);var n=a(10),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[t._v("#")]),t._v(" 原理")]),t._v(" "),s("p",[s("code",[t._v("Gozz")]),t._v(" 的核心工作简单概括，就是：")]),t._v(" "),s("p",[t._v("将开发者在代码中符合条件的所有注释收集为注解，并结合注解所在的代码定义相关上下文，\n提供给各个插件进行进一步的分析，进行代码编辑或生成。")]),t._v(" "),s("p",[t._v("要理解注解对象和上下文分析是如何怎样进行的，需要对 "),s("code",[t._v("Golang AST")]),t._v(" 的基本概念有一定的了解。")]),t._v(" "),s("h2",{attrs:{id:"ast-是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ast-是什么"}},[t._v("#")]),t._v(" AST 是什么")]),t._v(" "),s("p",[s("code",[t._v("AST")]),t._v(" 即 "),s("strong",[t._v("Abstract Syntax Tree 抽象语法树")]),t._v(" ，它是各种编程语言代码文件的一种结构化解析结果，\n大部分的编程语言都会在编译或执行前将代码事先分析为 "),s("code",[t._v("AST")]),t._v(" 对象，再进行下一步的处理，\n"),s("code",[t._v("AST")]),t._v(" 也是各位的 Golang 代码从文本变为可执行二进制的中间态之一。")]),t._v(" "),s("p",[t._v("将代码从文本文件转换为 "),s("code",[t._v("AST")]),t._v(" 之后，我们就可以像操作程序结构化对象一样，去访问、分析、修改代码块里的任何内容，\n从而提升我们在进行代码生成以及代码自动化编辑的稳定性和灵活性。")]),t._v(" "),s("p",[t._v("Golang 对开发者暴露了编译器使用的语法解析库 "),s("code",[t._v("go/ast")]),t._v(" ，使得开发者可以直接享受与编译器一致的语法解析体验。\n同时 Golang 还提供 "),s("code",[t._v("go/format")]),t._v(" 支持我们将 "),s("code",[t._v("AST")]),t._v(" 重新格式化成文本，对语言的工具链生态提供极大的便利和可拓展性。")]),t._v(" "),s("p",[t._v("我们在用的很多工具，包括 "),s("code",[t._v("gofmt")]),t._v(" / "),s("code",[t._v("golangci-lint")]),t._v(" 等， "),s("code",[t._v("go/ast")]),t._v(" 都发挥了极其核心的作用。")]),t._v(" "),s("h2",{attrs:{id:"golang-ast-简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#golang-ast-简介"}},[t._v("#")]),t._v(" Golang AST 简介")]),t._v(" "),s("p",[t._v("在 "),s("code",[t._v("Golang AST")]),t._v(" 中，我们 "),s("code",[t._v("package")]),t._v(" 下的大部分的代码块，可以被理解为一种 "),s("code",[t._v("Decl")]),t._v(" (declaration) 声明对象，也是由关键字识别的第一级代码块。")]),t._v(" "),s("p",[t._v("而 "),s("code",[t._v("Decl")]),t._v(" 分为 "),s("code",[t._v("GenDecl")]),t._v(" (generic declaration) 和 "),s("code",[t._v("FuncDecl")]),t._v(" (function declaration)。")]),t._v(" "),s("p",[t._v("可以粗略地认为，除 "),s("code",[t._v("func")]),t._v(" 之外的声明对象都是 "),s("code",[t._v("GenDecl")]),t._v("。")]),t._v(" "),s("p",[t._v("如")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" x\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GenDecl")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"go/ast"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GenDecl")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" A "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GenDecl")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tB  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n\tB2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GenDecl")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" C "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GenDecl")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tD  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\tD2 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GenDecl")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" E "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GenDecl")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tF  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n\tF2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// FuncDecl")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("G")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[t._v("而除了 "),s("code",[t._v("FuncDecl")]),t._v(" 外，"),s("code",[t._v("GenDecl")]),t._v(" 下的第二级定义被称为 "),s("code",[t._v("Spec")]),t._v(", 主要分为 "),s("code",[t._v("TypeSpec / ValueSpec / ImportSpec")]),t._v("。")]),t._v(" "),s("p",[s("code",[t._v("Spec")]),t._v(" 部分不包含关键字，但是 "),s("code",[t._v("Spec")]),t._v(" 的类型是由关键字判定的 ("),s("code",[t._v("const/var/import/type")]),t._v(")。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" x\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GenDecl")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ImportSpec")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"go/ast"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GenDecl")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" A "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ValueSpec")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GenDecl")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ValueSpec")]),t._v("\n\tB "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ValueSpec")]),t._v("\n\tB2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GenDecl")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" C "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TypeSpec")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GenDecl")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TypeSpec")]),t._v("\n\tD "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TypeSpec")]),t._v("\n\tD2 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GenDecl")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" E "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ValueSpec")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GenDecl")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tF  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ValueSpec")]),t._v("\n\tF2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ValueSpec")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Golang 在处理注释时，和对象相邻的注释会被关联到该对象，并分为两类 "),s("code",[t._v("Doc")]),t._v(" 和 "),s("code",[t._v("Comment")]),t._v("。")]),t._v(" "),s("p",[s("code",[t._v("Doc")]),t._v(" 即为紧贴对象上方的注释，"),s("code",[t._v("Comment")]),t._v(" 即为在对象后方的注释。")]),t._v(" "),s("p",[s("code",[t._v("Decl")]),t._v(" 类型对象注释只有 "),s("code",[t._v("Doc")]),t._v(" ，而 "),s("code",[t._v("Spec")]),t._v(" 类型对象注释包含 "),s("code",[t._v("Doc")]),t._v(" 和 "),s("code",[t._v("Comment")]),t._v("。")]),t._v(" "),s("p",[t._v("注释和对象的关联判定明细，可以参考 "),s("RouterLink",{attrs:{to:"/zh/guide/plugins/doc.html#示例二"}},[t._v("Doc示例二")])],1),t._v(" "),s("p",[t._v("如下：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" x\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GenDeclDoc")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ImportSpecDoc")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"go/ast"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ImportSpecComment")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GenDeclDoc")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" A "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ValueSpecComment")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GenDeclDoc")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TypeSpecDoc")]),t._v("\n\tB "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TypeSpecComment")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TypeSpecDoc")]),t._v("\n\tB2 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// FuncDeclDoc")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("x")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("h2",{attrs:{id:"注解分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注解分析"}},[t._v("#")]),t._v(" 注解分析")]),t._v(" "),s("h3",{attrs:{id:"语法解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#语法解析"}},[t._v("#")]),t._v(" 语法解析")]),t._v(" "),s("p",[t._v("启动后会遍历分析指定目录及子目录内所有 Golang 文件 "),s("code",[t._v("FuncDecl")]),t._v(" 和 其他各种 "),s("code",[t._v("Spec")]),t._v(" 的注释（包括 "),s("code",[t._v("Doc")]),t._v(" 和 "),s("code",[t._v("Comment")]),t._v("），\n并分行匹配出注解。有注解的对象注释会被按行划分为 注解 和 文档。")]),t._v(" "),s("p",[t._v("预处理阶段会收集出所有被注解的 "),s("code",[t._v("注解对象 AnnotatedDecl")]),t._v(" ( 除了 "),s("code",[t._v("FuncDecl")]),t._v(" 之外基本是 "),s("code",[t._v("Spec")]),t._v(" )，\n并缓存相关的文件信息和 AST 解析信息在内存中。")]),t._v(" "),s("h3",{attrs:{id:"注解解析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注解解析"}},[t._v("#")]),t._v(" 注解解析")]),t._v(" "),s("p",[t._v("在将注解对象正式分配给插件时，会将所有被注解对象的注解按行匹配出符合被调动插件的注解，\n每个注解对象都会被匹配到 0 ~ N 次。")]),t._v(" "),s("p",[t._v("被匹配的"),s("strong",[t._v("每条注解")]),t._v("会解析注解参数，并与运行命令的添加的额外参数进行合并，\n和被注解对象组成一个新的对象 "),s("code",[t._v("注解实例 DeclEntity")]),t._v("，\n每个插件的核心功能就是利用匹配到的若干个注解实例去进行不同的自定义代码分析处理。")]),t._v(" "),s("h3",{attrs:{id:"全局运行时"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#全局运行时"}},[t._v("#")]),t._v(" 全局运行时")]),t._v(" "),s("p",[t._v("在一次命令运行中，可以指定多个插件按顺序执行，如")]),t._v(" "),s("div",{staticClass:"language-shell extra-class"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[t._v("gozz run "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"api"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"impl"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"doc"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"wire"')]),t._v(" ./\n")])])]),s("p",[t._v("因为不同插件运行后可能会产生新的文件以及被注解对象，"),s("code",[t._v("Gozz")]),t._v(" 在每个插件处理插件实例前都会重新对目标目录或文件进行遍历解析。")]),t._v(" "),s("p",[t._v("由于之前的解析已经缓存了文件内容和解析的结果，只要文件没有被前置运行的插件修改，这些缓存都能够被有效复用。\n因此运行时指定多个插件，有效利用解析缓存，理论上会有更快的处理速度。")])])}),[],!1,null,null,null);s.default=e.exports}}]);