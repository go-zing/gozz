(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{307:function(t,s,e){"use strict";e.r(s);var a=e(14),n=Object(a.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#介绍"}},[t._v("#")]),t._v(" 介绍")]),t._v(" "),s("p",[s("code",[t._v("Gozz")]),t._v(" 由三部分组成：")]),t._v(" "),s("ol",[s("li",[s("p",[s("code",[t._v("Gozz-core")]),t._v(" 是 "),s("code",[t._v("Gozz")]),t._v(" 运行的内核，包含了对于 Golang 文件语法解析以及从解析后的 AST 中提取 "),s("code",[t._v("+zz:${plugin}")]),t._v(" 风格注解\n并解析为对应插件选项的工具，同时为各个插件提供包含 模版、生成、编辑、追加 文件的一系列封装库。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Gozz")]),t._v(" 是用户使用 "),s("code",[t._v("Gozz")]),t._v(" 的客户终端，即 cli 工具运行的入口，包含了对用户命令的解析，插件的加载和实例化，以及对外部扩展的加载。")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("Gozz")]),t._v(" 中还提供了一系列强大的内置插件，囊括了作者在发起该项目时希望能够替自己解决以及将这些优秀设计快速落地到技术团队的一些核心功能需求，包括：")]),t._v(" "),s("ul",[s("li",[t._v("如何快速构建API和输出API、业务领域文档，并减低持续迭代的多分发校对成本")]),t._v(" "),s("li",[t._v("如何通过优化系统依赖架构提升项目可迭代性，同时优化多人大型项目协作效率")]),t._v(" "),s("li",[t._v("如何灵活切面化注入技术性功能，提升可观测性同时尽可能降低开发者的埋点工作量")])])])]),t._v(" "),s("h2",{attrs:{id:"理念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#理念"}},[t._v("#")]),t._v(" 理念")]),t._v(" "),s("p",[t._v("编程 就是将 "),s("strong",[t._v("重复、繁琐的事情")]),t._v(" ，将成熟的方案 通过程序化实现高效、低成本、规范化的解决")]),t._v(" "),s("p",[t._v("而我们的设计和开发过程中本身有很多工作，本身也是 "),s("strong",[t._v("重复、繁琐的事情")])]),t._v(" "),s("p",[t._v("在我们一遍又一遍地去浪费时间做这些 低效开发时 本身就违背了编程的初衷和思想")]),t._v(" "),s("p",[s("code",[t._v("Gozz")]),t._v(" 希望 将成熟的技术方法论 和 优秀的系统架构方案 高效、低成本、规范化地 传播和落地")]),t._v(" "),s("p",[t._v("并希望大家由此能")]),t._v(" "),s("blockquote",[s("p",[t._v("Less, But Better")])]),t._v(" "),s("p",[t._v("而 "),s("code",[t._v("Gozz")]),t._v(" 实现这点的理念就是")]),t._v(" "),s("blockquote",[s("p",[t._v("最好的代码，是不需要每个人都写的代码")])]),t._v(" "),s("h3",{attrs:{id:"交互设计理念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#交互设计理念"}},[t._v("#")]),t._v(" 交互设计理念")]),t._v(" "),s("p",[s("code",[t._v("Gozz")]),t._v(" 遵循 "),s("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E7%BA%A6%E5%AE%9A%E4%BC%98%E4%BA%8E%E9%85%8D%E7%BD%AE",target:"_blank",rel:"noopener noreferrer"}},[t._v("约定优于配置"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("会尽可能使用 "),s("strong",[t._v("简洁")]),t._v(" 和 "),s("strong",[t._v("符合人类直觉")]),t._v(" 的 命令 / 注解 / 参数")]),t._v(" "),s("h2",{attrs:{id:"适用场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#适用场景"}},[t._v("#")]),t._v(" 适用场景")]),t._v(" "),s("h3",{attrs:{id:"个人"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#个人"}},[t._v("#")]),t._v(" 个人")]),t._v(" "),s("p",[s("code",[t._v("Gozz")]),t._v(" 不会在 Feature 中强调对初阶 Gopher 的友好性，因为 "),s("strong",[s("code",[t._v("注释注解")]),t._v("是非官方的特性")]),t._v(" ，我们不希望引入额外认知成本 从而影响\nGopher 对 Golang 本身的学习曲线")]),t._v(" "),s("p",[t._v("一方面 "),s("code",[t._v("Gozz")]),t._v(" 部分插件的生成结果的使用 需要开发者对 Golang 类型和 "),s("code",[t._v("interface")]),t._v(" 系统 甚至 "),s("code",[t._v("reflect")]),t._v(" 有一定深入认知")]),t._v(" "),s("p",[t._v("另一方面 对于 "),s("code",[t._v("Gozz 解决的到底是什么问题")]),t._v(" 也需要对 系统架构 和 设计模式 有一定的认知前提")]),t._v(" "),s("p",[t._v("如果你有使用 "),s("code",[t._v("JAVA Spring")]),t._v(" 的经验，那么恭喜，你可以有一定的认知优势")]),t._v(" "),s("p",[s("code",[t._v("Gozz")]),t._v(" 解决需求的思路学习了 "),s("code",[t._v("JAVA Spring")]),t._v(" 一些重要设计思想，"),s("strong",[t._v("但绝不是拙劣地模仿")]),t._v("。")]),t._v(" "),s("h3",{attrs:{id:"团队"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#团队"}},[t._v("#")]),t._v(" 团队")]),t._v(" "),s("p",[s("code",[t._v("人月神话")]),t._v(" 中有 "),s("code",[t._v("保有概念整体性")]),t._v(" 的说法 这个系统设计理念也是笔者比较认同 即：")]),t._v(" "),s("p",[s("strong",[t._v("系统的核心架构设计 需要由极少数人专制控制")])]),t._v(" "),s("p",[t._v("因此，使用 "),s("code",[t._v("Gozz")]),t._v(" 的时候，团队需要由一个核心的架构师角色给出适合团队的 "),s("code",[t._v("Gozz")]),t._v(" 配置 以及 维护生成模板和适配层")]),t._v(" "),s("p",[t._v("在团队内 即使是不同的业务项目 在 "),s("code",[t._v("Gozz")]),t._v(" 的使用上 都不应该产生过多分歧")]),t._v(" "),s("p",[t._v("而其他成员 只需要遵循团队的规范 将运行 "),s("code",[t._v("Gozz")]),t._v(" 的指令写到 项目 "),s("code",[t._v("Makefile")]),t._v(" 或构建工具 在 代码变更 及 提交之前 去执行")]),t._v(" "),s("h5",{attrs:{id:"实际上-笔者在以往工作团队中推广-gozz-的前世内部版本-也是以相同的模式进行"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实际上-笔者在以往工作团队中推广-gozz-的前世内部版本-也是以相同的模式进行"}},[t._v("#")]),t._v(" "),s("em",[t._v("实际上，笔者在以往工作团队中推广 "),s("code",[t._v("Gozz")]),t._v(" 的前世内部版本 也是以相同的模式进行")])]),t._v(" "),s("p",[t._v("但是 "),s("code",[t._v("Gozz")]),t._v(" 鼓励所有团队角色去主动探索和学习 如何去优化业务和项目的架构设计 用更低的成本 办 更多更好的事")]),t._v(" "),s("p",[s("code",[t._v("Gozz")]),t._v(" 也将会在项目示例中提供一些最佳实践 供开发者们参考")]),t._v(" "),s("h3",{attrs:{id:"微服务-or-单体"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#微服务-or-单体"}},[t._v("#")]),t._v(" 微服务 or 单体")]),t._v(" "),s("p",[s("code",[t._v("Gozz")]),t._v(" 并不针对微服务场景，相反，越大型的项目和协作团队，会越容易从 "),s("code",[t._v("Gozz")]),t._v(" 中受益更多")]),t._v(" "),s("p",[t._v("实际上 微服务 只代表 服务在企业业务依赖领域设计中 的 "),s("code",[t._v("Micro")]),t._v(" 或 "),s("code",[t._v("Pluggable")]),t._v(" ，从来不代表 项目代码架构层级和设计的简单")]),t._v(" "),s("p",[t._v("因此 如果你希望团队的微服务项目代码质量能够得到一定的提升 也欢迎使用 "),s("code",[t._v("Gozz")]),t._v(" 去组织团队的开发")]),t._v(" "),s("h2",{attrs:{id:"工作原理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#工作原理"}},[t._v("#")]),t._v(" 工作原理")]),t._v(" "),s("p",[s("code",[t._v("Gozz")]),t._v(" 的核心工作简单概括，就是：将开发者在代码中符合条件的所有注解收集，并结合相关上下文提供给各个插件进行进一步的代码编辑或生成。")]),t._v(" "),s("p",[t._v("要理解注解的分析和上下文，需要对 "),s("code",[t._v("Golang AST")]),t._v(" 的基本概念有一定的了解。")]),t._v(" "),s("h3",{attrs:{id:"golang-ast-简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#golang-ast-简介"}},[t._v("#")]),t._v(" Golang AST 简介")]),t._v(" "),s("p",[t._v("在 "),s("code",[t._v("Golang AST")]),t._v(" 中，我们大部分的代码块，可以被理解为一种 "),s("code",[t._v("Decl")]),t._v(" 即 "),s("code",[t._v("Declaration")]),t._v("，也是由关键字识别的第一级代码块。")]),t._v(" "),s("p",[t._v("而 "),s("code",[t._v("Decl")]),t._v(" 中 主要又分为 "),s("code",[t._v("GenDecl")]),t._v(" (generic) 和 "),s("code",[t._v("FuncDecl")]),t._v(" (function)。")]),t._v(" "),s("p",[t._v("可以粗略地认为，除 "),s("code",[t._v("func")]),t._v(" 开头的 都是 "),s("code",[t._v("GenDecl")])]),t._v(" "),s("p",[t._v("如")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" x\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GenDecl")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"go/ast"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GenDecl")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" A "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GenDecl")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tB  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n\tB2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GenDecl")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" C "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GenDecl")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tD  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\tD2 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GenDecl")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" E "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GenDecl")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tF  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n\tF2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// FuncDecl")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("G")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("p",[t._v("而除了 "),s("code",[t._v("FuncDecl")]),t._v(" 外，"),s("code",[t._v("GenDecl")]),t._v(" 下的第二级定义被称为 "),s("code",[t._v("Spec")]),t._v(", 主要分为 "),s("code",[t._v("TypeSpec / ValueSpec / ImportSpec")]),t._v("。")]),t._v(" "),s("p",[s("code",[t._v("Spec")]),t._v(" 部分不会包含关键字，但是 "),s("code",[t._v("Spec")]),t._v(" 的类型是由关键字判定的 ("),s("code",[t._v("const/var/import/type")]),t._v(")。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" x\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GenDecl")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ImportSpec")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"go/ast"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GenDecl")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" A "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ValueSpec")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GenDecl")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ValueSpec")]),t._v("\n\tB "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ValueSpec")]),t._v("\n\tB2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GenDecl")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" C "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("int")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TypeSpec")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GenDecl")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TypeSpec")]),t._v("\n\tD "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TypeSpec")]),t._v("\n\tD2 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GenDecl")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" E "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ValueSpec")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GenDecl")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tF  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ValueSpec")]),t._v("\n\tF2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ValueSpec")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n")])])]),s("p",[t._v("Golang 在处理注释时，如果注释紧贴对象，会被认为是该对象的注释，并分为两类 "),s("code",[t._v("Doc")]),t._v(" 和 "),s("code",[t._v("Comment")]),t._v("。")]),t._v(" "),s("p",[s("code",[t._v("Doc")]),t._v(" 即为紧贴对象上方的注释，"),s("code",[t._v("Comment")]),t._v(" 即为在对象后方的注释。")]),t._v(" "),s("p",[s("code",[t._v("Decl")]),t._v(" 类型对象只有 "),s("code",[t._v("Doc")]),t._v(" 而 "),s("code",[t._v("Spec")]),t._v(" 类型一般会有 "),s("code",[t._v("Doc")]),t._v(" 和 "),s("code",[t._v("Comment")]),t._v("。")]),t._v(" "),s("p",[t._v("如下：")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" x\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GenDeclDoc")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ImportSpecDoc")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("_")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"go/ast"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ImportSpecComment")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GenDeclDoc")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" A "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// ValueSpecComment")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// GenDeclDoc")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TypeSpecDoc")]),t._v("\n\tB "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TypeSpecComment")]),t._v("\n\n\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// TypeSpecDoc")]),t._v("\n\tB2 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// FuncDeclDoc")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("x")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),s("h3",{attrs:{id:"注解分析过程"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注解分析过程"}},[t._v("#")]),t._v(" 注解分析过程")]),t._v(" "),s("p",[t._v("启动后会遍历分析指定目录及子目录内所有 Golang 文件 "),s("code",[t._v("FuncDecl")]),t._v(" 和 其他各种 "),s("code",[t._v("Spec")]),t._v(" 的注释（包括 "),s("code",[t._v("Doc")]),t._v(" 和 "),s("code",[t._v("Comment")]),t._v("），\n并分行匹配出注解。有注解的对象注释会被按行划分为 注解 和 文档。")]),t._v(" "),s("p",[t._v("预处理阶段，"),s("code",[t._v("Gozz")]),t._v(" 会收集出所有被注解的对象 "),s("code",[t._v("AnnotatedDecl")]),t._v("，并缓存相关的文件信息和 AST 解析信息在内存中。")]),t._v(" "),s("p",[t._v("在将注解对象正式分配给插件时，"),s("code",[t._v("Gozz")]),t._v(" 会将所有被注解对象的注解，按行匹配出符合被调动插件的注解，此时每个注解对象都会被匹配到\n0 ~ N 次。")]),t._v(" "),s("p",[t._v("被匹配的每条注解在解析为插件参数后，会和被注解对象组成一个新的对象 注解实例 "),s("code",[t._v("DeclEntity")]),t._v("，\n每个插件的核心功能就是利用匹配到的若干个注解实例去进行不同的自定义代码分析处理。")]),t._v(" "),s("p",[t._v("在一次 "),s("code",[t._v("Gozz")]),t._v(" 命令运行中，可以指定多个插件按顺序执行，如 "),s("code",[t._v('gozz run -p "api" -p "impl" ./')]),t._v("。")]),t._v(" "),s("p",[t._v("每个插件处理插件实例前，"),s("code",[t._v("Gozz")]),t._v(" 都会重新对目录文件进行遍历解析，但由于之前的解析已经缓存文件的信息和解析数据，\n文件没有被上一个插件修改，或新增文件时，这些缓存都会被有效复用。")]),t._v(" "),s("p",[t._v("因此运行时指定多个插件，有效利用解析缓存，理论上会有更快的处理速度。")])])}),[],!1,null,null,null);s.default=n.exports}}]);