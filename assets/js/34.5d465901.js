(window.webpackJsonp=window.webpackJsonp||[]).push([[34],{317:function(t,s,a){"use strict";a.r(s);var n=a(14),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"wire"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#wire"}},[t._v("#")]),t._v(" Wire")]),t._v(" "),s("p",[t._v("提供自动化的依赖注入以及AOP切面代理生成。")]),t._v(" "),s("p",[t._v("依赖注入管理基于 "),s("a",{attrs:{href:"https://github.com/google/wire",target:"_blank",rel:"noopener noreferrer"}},[t._v("wire"),s("OutboundLink")],1),t._v(" 实现。")]),t._v(" "),s("p",[t._v("通过该插件可以更自动化，更规范，更简洁易用地维护依赖注入对象。")]),t._v(" "),s("h2",{attrs:{id:"使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[t._v("#")]),t._v(" 使用")]),t._v(" "),s("h3",{attrs:{id:"注解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注解"}},[t._v("#")]),t._v(" 注解")]),t._v(" "),s("p",[s("code",[t._v("+zz:wire:[...options]")])]),t._v(" "),s("h3",{attrs:{id:"注解对象"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#注解对象"}},[t._v("#")]),t._v(" 注解对象")]),t._v(" "),s("p",[t._v("所有对象")]),t._v(" "),s("h3",{attrs:{id:"可选参数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#可选参数"}},[t._v("#")]),t._v(" 可选参数")]),t._v(" "),s("h4",{attrs:{id:"bind"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#bind"}},[t._v("#")]),t._v(" "),s("code",[t._v("bind")])]),t._v(" "),s("p",[t._v("将提供的对象绑定指定接口类型进行注入。")]),t._v(" "),s("p",[t._v("即使用 "),s("code",[t._v("wire.Bind(new(InterfaceType), new(T))")])]),t._v(" "),s("p",[t._v("示例："),s("code",[t._v("+zz:wire:bind=io.ReadCloser")])]),t._v(" "),s("h4",{attrs:{id:"aop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#aop"}},[t._v("#")]),t._v(" "),s("code",[t._v("aop")])]),t._v(" "),s("p",[t._v("当对象已经使用了 "),s("code",[t._v("bind")]),t._v(" 时，为绑定的接口创建接口调用代理，并替换绑定。")]),t._v(" "),s("p",[t._v("此时在生成 "),s("code",[t._v("wire_zset.go")]),t._v(" 以外，还会生成 "),s("code",[t._v("wire_zzaop.go")]),t._v("。")]),t._v(" "),s("p",[t._v("示例："),s("code",[t._v("+zz:wire:bind=io.ReadCloser:aop")])]),t._v(" "),s("h4",{attrs:{id:"struct"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#struct"}},[t._v("#")]),t._v(" "),s("code",[t._v("struct")])]),t._v(" "),s("p",[t._v("仅对引用类型生效，即 "),s("code",[t._v("type T = T2")]),t._v(" / "),s("code",[t._v("type T pkg.T3")]),t._v("，使用该选项使类型当作结构体类型注入。")]),t._v(" "),s("p",[t._v("即使用 "),s("code",[t._v('wire.Struct(new(T), "*")')])]),t._v(" "),s("p",[t._v("示例："),s("code",[t._v("+zz:wire:struct")])]),t._v(" "),s("p",[t._v("其他类型不需要使用该选项。")]),t._v(" "),s("h4",{attrs:{id:"field"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#field"}},[t._v("#")]),t._v(" "),s("code",[t._v("field")])]),t._v(" "),s("p",[t._v("将结构体对象的字段作为值提供注入。")]),t._v(" "),s("p",[t._v("可使用 "),s("code",[t._v("*")]),t._v(" 提供所有暴露字段")]),t._v(" "),s("p",[t._v("即使用 "),s("code",[t._v('wire.FieldsOf(new(T), "Field", "Field2", ...)')])]),t._v(" "),s("p",[t._v("示例："),s("code",[t._v("+zz:wire:field=*")])]),t._v(" "),s("h4",{attrs:{id:"inject"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#inject"}},[t._v("#")]),t._v(" "),s("code",[t._v("inject")])]),t._v(" "),s("p",[t._v("指定对象为 "),s("code",[t._v("构建目标")]),t._v("，在参数指定路径创建 "),s("code",[t._v("构建函数")]),t._v(" 和生成注入相关的声明( "),s("code",[t._v("wire_zset.go")]),t._v(" )。")]),t._v(" "),s("p",[t._v("当提供路径没有 "),s("code",[t._v(".go")]),t._v(" 后缀时，默认使用 "),s("code",[t._v("wire_zinject.go")]),t._v(" 为文件名")]),t._v(" "),s("p",[t._v("示例："),s("code",[t._v("+zz:wire:inject=./")])]),t._v(" "),s("p",[s("code",[t._v("构建函数")]),t._v(" 为 "),s("code",[t._v("func Initialize_T() (T, func(), error)")])]),t._v(" "),s("h4",{attrs:{id:"param"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#param"}},[t._v("#")]),t._v(" "),s("code",[t._v("param")])]),t._v(" "),s("p",[t._v("当对象使用 "),s("code",[t._v("inject")]),t._v(" 被指定为 "),s("code",[t._v("构建目标")]),t._v(" 时。"),s("code",[t._v("param")]),t._v(" 中的类型会作为 "),s("code",[t._v("构建函数")]),t._v(" 的参数。")]),t._v(" "),s("p",[t._v("示例："),s("code",[t._v("+zz:wire:inject=./:param=context.Context")])]),t._v(" "),s("p",[s("code",[t._v("构建函数")]),t._v(" 为 "),s("code",[t._v("func Initialize_T(context.Context) (T, func(), error)")])]),t._v(" "),s("h4",{attrs:{id:"set"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#set"}},[t._v("#")]),t._v(" "),s("code",[t._v("set")])]),t._v(" "),s("p",[t._v("指定 "),s("code",[t._v("set")]),t._v(" 的对象，会被收集到独立的 "),s("code",[t._v("wire.NewSet")]),t._v(" 组，无指定 "),s("code",[t._v("set")]),t._v(" 会使用全局默认组。")]),t._v(" "),s("p",[t._v("可以使用 "),s("code",[t._v("!")]),t._v(" 前缀，此情况会将对象放置入所有非前缀的组，规则类似 "),s("code",[t._v("go build -tag")]),t._v("。")]),t._v(" "),s("p",[t._v("示例："),s("code",[t._v("+zz:wire:set=!mock")]),t._v(" / "),s("code",[t._v("+zz:wire:set=mock,unittest")])]),t._v(" "),s("h2",{attrs:{id:"示例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[t._v("#")]),t._v(" 示例")]),t._v(" "),s("h3",{attrs:{id:"示例一"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#示例一"}},[t._v("#")]),t._v(" 示例一")]),t._v(" "),s("p",[t._v("项目目录结构")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("/wire01/\n├── go.mod -> module github.com/go-zing/gozz-doc-examples/wire01\n└── types.go\n")])])]),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// /wire01/types.go")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" wire01\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:wire")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" StructA "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:wire")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" StructB "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tInterfaceC\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:wire:bind=InterfaceC")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" StructC "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tStructA\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("StructC"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" InterfaceC "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Foo")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:wire:inject=./")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Target "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tStructA\n\tStructB\n\tInterfaceC\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("以上例子中，我们需要从提供的各种类型中构建出 "),s("code",[t._v("Target")]),t._v("，而这些类型又以一定的关系相互依赖。")]),t._v(" "),s("p",[t._v("在添加注解后，执行 "),s("code",[t._v('gozz run -p "wire" ./')])]),t._v(" "),s("p",[t._v("生成了 "),s("code",[t._v("wire_gen.go")]),t._v(" "),s("code",[t._v("wire_zinject.go")]),t._v(" "),s("code",[t._v("wire_zset.go")]),t._v(" 三个文件")]),t._v(" "),s("p",[s("code",[t._v("wire_zset.go")]),t._v(" 中包含了 使用 "),s("code",[t._v("wire")]),t._v(" 时原来要人工描述的注入对象及 "),s("code",[t._v("对象组")]),t._v(" 声明。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// wire01/wire_zset.go")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" wire01\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\twire "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"github.com/google/wire"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t_Set "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" wire"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("NewSet")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// github.com/go-zing/gozz-doc-examples/wire01.StructA")]),t._v("\n\t\twire"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Struct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("new")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("StructA"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// github.com/go-zing/gozz-doc-examples/wire01.StructB")]),t._v("\n\t\twire"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Struct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("new")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("StructB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// github.com/go-zing/gozz-doc-examples/wire01.StructC")]),t._v("\n\t\twire"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Bind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("new")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("InterfaceC"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("new")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("StructC"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\twire"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Struct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("new")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("StructC"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n\t\t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// github.com/go-zing/gozz-doc-examples/wire01.Target")]),t._v("\n\t\twire"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Struct")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("new")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("Target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("p",[s("code",[t._v("wire_zinject.go")]),t._v(" 中包含了 使用 "),s("code",[t._v("wire")]),t._v(" 时原来要人工描述的 "),s("code",[t._v("构造函数")]),t._v(" 以及要使用的 "),s("code",[t._v("对象组")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// wire01/wire_zinject.go")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" wire01\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\twire "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"github.com/google/wire"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// github.com/go-zing/gozz-doc-examples/wire01.Target")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Initialize_Target")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("panic")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("wire"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Build")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("_Set"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[s("code",[t._v("wire_gen.go")]),t._v(" 是生成成功后，自动调用 "),s("code",[t._v("wire")]),t._v(" 生成的文件，提供了生成的依赖注入构造函数实现。")]),t._v(" "),s("div",{staticClass:"language-go extra-class"},[s("pre",{pre:!0,attrs:{class:"language-go"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// wire01/wire_gen.go")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" wire01\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("Initialize_Target")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("Target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("error")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tstructA "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" StructA"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\tstructC "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("StructC"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tStructA"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" structA"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\tstructB "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" StructB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tInterfaceC"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" structC"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\ttarget "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&")]),t._v("Target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tStructA"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("    structA"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tStructB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("    structB"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t\tInterfaceC"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" structC"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("func")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("nil")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);