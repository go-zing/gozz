(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{316:function(t,a,s){"use strict";s.r(a);var e=s(14),r=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"tag"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tag"}},[t._v("#")]),t._v(" Tag")]),t._v(" "),a("p",[t._v("用于快速模板化填充结构体字段标签")]),t._v(" "),a("h2",{attrs:{id:"使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[t._v("#")]),t._v(" 使用")]),t._v(" "),a("h3",{attrs:{id:"注解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注解"}},[t._v("#")]),t._v(" 注解")]),t._v(" "),a("p",[a("code",[t._v("+zz:tag:[tag]:[format]")])]),t._v(" "),a("h3",{attrs:{id:"注解对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注解对象"}},[t._v("#")]),t._v(" 注解对象")]),t._v(" "),a("p",[t._v("所有 "),a("code",[t._v("TypeSpec")]),t._v(" 对象 和 被注解类型内部的结构体 "),a("code",[t._v("Field")])]),t._v(" "),a("h3",{attrs:{id:"必填参数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#必填参数"}},[t._v("#")]),t._v(" 必填参数")]),t._v(" "),a("h4",{attrs:{id:"tag-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#tag-2"}},[t._v("#")]),t._v(" "),a("code",[t._v("tag")])]),t._v(" "),a("p",[t._v("生成标签的 Key，若有多 Key 重复 Value 可使用 "),a("code",[t._v(",")]),t._v(" 分隔")]),t._v(" "),a("p",[t._v("示例： "),a("span",{pre:!0},[a("code",[t._v("+zz:tag:json,form,bson,sql:{{ snake .FieldName }}")])])]),t._v(" "),a("br"),t._v(" "),a("p",[t._v("注解字段的 "),a("code",[t._v("tag")]),t._v(" 可以使用 "),a("code",[t._v("+")]),t._v(" 前缀，去对类型注解同个 "),a("code",[t._v("tag")]),t._v(" 进行补充")]),t._v(" "),a("p",[t._v("示例:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" x\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:tag:json:{{ snake .FieldName }}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" T "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("struct")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:tag:+json:,omitempty")]),t._v("\n\tObjectId "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('`json:"object_id,omitempty"`')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n")])])]),a("h4",{attrs:{id:"format"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#format"}},[t._v("#")]),t._v(" "),a("code",[t._v("format")])]),t._v(" "),a("p",[t._v("生成标签的 Value，模版数据包含 字段名 "),a("code",[t._v("FieldName")]),t._v(" 和 字段文档 "),a("code",[t._v("Doc")]),t._v("，可以使用各种内置字符串处理模版函数。")]),t._v(" "),a("p",[t._v("示例： "),a("span",{pre:!0},[a("code",[t._v("+zz:tag:json,form,bson,sql:{{ snake .FieldName }}")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);