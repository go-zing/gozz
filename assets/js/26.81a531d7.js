(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{310:function(t,a,e){"use strict";e.r(a);var s=e(10),n=Object(s.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"get-started"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#get-started"}},[t._v("#")]),t._v(" Get Started")]),t._v(" "),a("h2",{attrs:{id:"usage"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#usage"}},[t._v("#")]),t._v(" Usage")]),t._v(" "),a("h3",{attrs:{id:"install"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install"}},[t._v("#")]),t._v(" Install")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("go "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" github.com/go-zing/gozz@latest\n")])])]),a("h2",{attrs:{id:"cli"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cli"}},[t._v("#")]),t._v(" CLI")]),t._v(" "),a("p",[a("code",[t._v("Gozz")]),t._v(" CLI is built with "),a("a",{attrs:{href:"https://github.com/spf13/cobra",target:"_blank",rel:"noopener noreferrer"}},[t._v("cobra"),a("OutboundLink")],1),t._v(", command syntax as follows:")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("gozz "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--GLOBAL-FLAGS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("COMMAND"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--COMMAND-FLAGS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("ARGS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("h3",{attrs:{id:"environment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#environment"}},[t._v("#")]),t._v(" Environment")]),t._v(" "),a("p",[a("code",[t._v("Gozz")]),t._v(" would lookup "),a("code",[t._v(".so")]),t._v(" plugins in user's home directory "),a("code",[t._v("~/.gozz/plugins/")]),t._v(" when starts up,\nexception raised during these default plugins loading would be ignored.")]),t._v(" "),a("p",[t._v("Use env "),a("code",[t._v("GOZZ_PLUGINS_DIR")]),t._v(" to specify the default plugins install directory.")]),t._v(" "),a("h2",{attrs:{id:"command"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#command"}},[t._v("#")]),t._v(" Command")]),t._v(" "),a("p",[a("code",[t._v("Gozz")]),t._v(" supports commands as follows:")]),t._v(" "),a("h3",{attrs:{id:"gozz-list"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gozz-list"}},[t._v("#")]),t._v(" "),a("code",[t._v("gozz list")])]),t._v(" "),a("p",[t._v("This command would list all plugins registered in core and ready to use,\nand their arguments and description would print into your console.\nYou can check whether plugins is correctly loads by core.")]),t._v(" "),a("p",[t._v("Usage：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("gozz list\n")])])]),a("h3",{attrs:{id:"gozz-run"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gozz-run"}},[t._v("#")]),t._v(" "),a("code",[t._v("gozz run")])]),t._v(" "),a("p",[t._v("Usage：")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("gozz run "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--plugin/-p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("filename"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \n")])])]),a("p",[t._v("This command would start analysis to provided "),a("code",[t._v("filename")]),t._v(",\nand collect annotations context entities to specified ordered plugins for different jobs.\nIt would be the most used command.")]),t._v(" "),a("h4",{attrs:{id:"argument-filename"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#argument-filename"}},[t._v("#")]),t._v(" Argument "),a("code",[t._v("filename")])]),t._v(" "),a("p",[t._v("If "),a("code",[t._v("filename")]),t._v(" is a file. Parser would parse this file only.")]),t._v(" "),a("p",[t._v("If "),a("code",[t._v("filename")]),t._v(" is a directory. Parser would parse walk around and parse all files, including sub-dir.")]),t._v(" "),a("h4",{attrs:{id:"flag-plugin-p-name-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flag-plugin-p-name-options"}},[t._v("#")]),t._v(" Flag "),a("code",[t._v('--plugin / -p "name:options..."')])]),t._v(" "),a("p",[a("code",[t._v("gozz run")]),t._v(" should specify with one or more plugins")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# with single")]),t._v("\ngozz run "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--plugin")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),t._v(" ./\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in short hand")]),t._v("\ngozz run "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),t._v(" ./\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# with multi")]),t._v("\ngozz run "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"bar"')]),t._v(" ./\n")])])]),a("p",[t._v("When run with multi plugins, they would execute in specified order.\nEven if parser may do analysis before every plugin execute,\n"),a("code",[t._v("Gozz")]),t._v(" provide a file-meta based version cache for analysis results,\nSo that it may got better performance when running with multi plugins than one.")]),t._v(" "),a("h4",{attrs:{id:"append-plugin-options"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#append-plugin-options"}},[t._v("#")]),t._v(" Append Plugin Options")]),t._v(" "),a("p",[t._v("you could append default options after plugin name and seperated with "),a("code",[t._v(":")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# append default option [ key:value key2:value2 ] for plugin foo.")]),t._v("\ngozz run "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo:key=value:key2=value2"')]),t._v(" ./ \n")])])]),a("p",[t._v("If annotation "),a("code",[t._v("+zz:foo:key=value3")]),t._v(" got default option "),a("code",[t._v("key=value:key2=value2")]),t._v(", treat as follows:")]),t._v(" "),a("p",[a("code",[t._v("+zz:foo:key=value3(key exist,ignore):key2=value2(override from default)")])]),t._v(" "),a("h3",{attrs:{id:"gozz-install"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gozz-install"}},[t._v("#")]),t._v(" "),a("code",[t._v("gozz install")])]),t._v(" "),a("p",[t._v("Usage:")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("gozz "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--output/-o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--filepath/-f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("repository"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \n")])])]),a("p",[t._v("This command would try complies "),a("code",[t._v("repository")]),t._v(" into "),a("code",[t._v(".so")]),t._v(" plugin,\nthen saves in user's plugins path "),a("code",[t._v("~/.gozz/plugins")]),t._v(" ( or environment "),a("code",[t._v("GOZZ_PLUGINS_DIR")]),t._v(").")]),t._v(" "),a("h4",{attrs:{id:"argument-repository"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#argument-repository"}},[t._v("#")]),t._v(" Argument "),a("code",[t._v("repository")])]),t._v(" "),a("p",[t._v("if "),a("code",[t._v("repository")]),t._v(" starts with network protocol, such as "),a("code",[t._v("ssh:// git:// http:// https://")]),t._v(",\nit try downloads these url with "),a("code",[t._v("git")]),t._v(", otherwise use url as local filepath.")]),t._v(" "),a("h4",{attrs:{id:"flag-output-o"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flag-output-o"}},[t._v("#")]),t._v(" Flag "),a("code",[t._v("--output / -o")])]),t._v(" "),a("p",[t._v("If it was specified, build results would output as provided filename, and do not install into plugins dir.")]),t._v(" "),a("h4",{attrs:{id:"flag-filepath-f"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flag-filepath-f"}},[t._v("#")]),t._v(" Flag "),a("code",[t._v("--filepath / -f")])]),t._v(" "),a("p",[t._v("If it was specified, build plugins with this relative filepath from repository root.")]),t._v(" "),a("p",[t._v("Example:")]),t._v(" "),a("div",{staticClass:"language-bash extra-class"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[t._v("gozz "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" https://github.com/go-zing/gozz-plugins "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-f")]),t._v(" ./ormdrivers/mysql "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-o")]),t._v(" orm-mysql.so\n")])])]),a("p",[a("code",[t._v("Gozz")]),t._v(" would download this remote repo and build it with command:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("go build --buildmode=plugin -o orm-mysql.so ./ormdrivers/mysql\n")])])]),a("h4",{attrs:{id:"precondition-for-install-plugins"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#precondition-for-install-plugins"}},[t._v("#")]),t._v(" Precondition for install plugins")]),t._v(" "),a("ul",[a("li",[t._v("Version must be match between "),a("code",[t._v("gozz")]),t._v(" built from and environment.")]),t._v(" "),a("li",[t._v("Plugin Repo "),a("code",[t._v("gozz-core")]),t._v(" must be adapted with gozz CLI.")]),t._v(" "),a("li",[t._v("Others factors effect compatibility of "),a("code",[t._v("go/plugin")]),t._v(".\ncheckout: "),a("a",{attrs:{href:"https://tonybai.com/2021/07/19/understand-go-plugin/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Understand Go Plugin"),a("OutboundLink")],1),t._v("。")])]),t._v(" "),a("h3",{attrs:{id:"global-flags"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#global-flags"}},[t._v("#")]),t._v(" Global Flags")]),t._v(" "),a("h4",{attrs:{id:"x-extension-filename"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#x-extension-filename"}},[t._v("#")]),t._v(" "),a("code",[t._v("-x / --extension [filename]")])]),t._v(" "),a("p",[t._v("Example:")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# execute list command ")]),t._v("\ngozz "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-x")]),t._v(" plugin.so list\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# execute run command")]),t._v("\ngozz "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-x")]),t._v(" plugin.so run "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-p")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"plugin"')]),t._v(" ./\n")])])]),a("p",[t._v("Use this flag to load external "),a("code",[t._v(".so")]),t._v(" plugin with filepath.\nException raised during these plugins load would print error and exit process.")]),t._v(" "),a("h2",{attrs:{id:"annotation-syntax"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#annotation-syntax"}},[t._v("#")]),t._v(" Annotation Syntax")]),t._v(" "),a("p",[t._v("Annotations are comments that stick with object, and match syntax as follows:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:[PLUGIN]:[ARGS]:[OPTIONS]")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" T "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"plugin-plugin-name"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#plugin-plugin-name"}},[t._v("#")]),t._v(" "),a("code",[t._v("PLUGIN")]),t._v(" - plugin name")]),t._v(" "),a("p",[t._v("Plugin has unique name when registered. This name would also uses for matching annotation. Case-insensitive.")]),t._v(" "),a("p",[t._v("Example: plugin "),a("code",[t._v("Foo")]),t._v(" match annotations with prefix "),a("code",[t._v("+zz:foo")]),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"args-exact-arguments"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#args-exact-arguments"}},[t._v("#")]),t._v(" "),a("code",[t._v("ARGS")]),t._v(" - Exact Arguments")]),t._v(" "),a("p",[t._v("Plugins would specify exact arguments count.\nThese arguments should append after annotation prefix and seperated with "),a("code",[t._v(":")]),t._v(".\nIf an annotation match plugin prefix but does not have enough arguments. It would be ignored.")]),t._v(" "),a("p",[t._v("Example:")]),t._v(" "),a("p",[t._v("plugin "),a("code",[t._v("foo")]),t._v(" accepts two exact arguments, "),a("code",[t._v("+zz:foo:arg1:arg2")]),t._v(" would be accepted.")]),t._v(" "),a("p",[t._v("but rejects "),a("code",[t._v("+zz:foo:arg1")]),t._v(" and "),a("code",[t._v("+zz:foo")]),t._v(".")]),t._v(" "),a("h4",{attrs:{id:"why-ignore"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#why-ignore"}},[t._v("#")]),t._v(" Why Ignore")]),t._v(" "),a("p",[t._v("If an argument could have default value, it should not be a exact argument.")]),t._v(" "),a("p",[t._v("Checkout "),a("RouterLink",{attrs:{to:"/guide/#design-concept"}},[t._v("Design Concept")]),t._v(".")],1),t._v(" "),a("h3",{attrs:{id:"options-optional-arguments"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#options-optional-arguments"}},[t._v("#")]),t._v(" "),a("code",[t._v("OPTIONS")]),t._v(" - Optional Arguments")]),t._v(" "),a("p",[t._v("Values after exact arguments would be parsed as "),a("code",[t._v("Key-Value")]),t._v(" pairs option, and passed to plugin.")]),t._v(" "),a("p",[t._v("Example:")]),t._v(" "),a("p",[t._v("Plugin "),a("code",[t._v("foo")]),t._v(" Has 2 exact arguments. When parsing annotation as follows:")]),t._v(" "),a("p",[a("code",[t._v("+zz:foo:arg1:arg2:arg3=value:arg4")])]),t._v(" "),a("p",[t._v("Options "),a("code",[t._v('{"arg3":"value","arg4":""}')]),t._v(" would present.")]),t._v(" "),a("h4",{attrs:{id:"repeatable-optional-arguments"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#repeatable-optional-arguments"}},[t._v("#")]),t._v(" Repeatable Optional Arguments")]),t._v(" "),a("p",[t._v("Sometimes optional arguments accept slice value, they were often seperated with "),a("code",[t._v(",")]),t._v(". Example:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:foo:set=a,b,c,d")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" T "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("When these options were seperated in different key-value pairs.\nParser would merge them. Example:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:foo:set=a:set=:set=b:set=c,d")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" T "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("is equal to")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:foo:set=a,,b,c,d")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" T "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"boolean-option"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#boolean-option"}},[t._v("#")]),t._v(" Boolean Option")]),t._v(" "),a("p",[t._v("Sometimes, plugin would check whether a key exists in options.\nThese were called "),a("code",[t._v("Boolean Option")]),t._v(".")]),t._v(" "),a("p",[t._v("If a "),a("code",[t._v("Boolean Option")]),t._v(" key's value is not empty. In additionally,\nParser would also check this value whether is implicit negative,\nlike "),a("code",[t._v("0 / false / null")]),t._v(".")]),t._v(" "),a("p",[t._v("Example:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("+zz:bar:arg3=value:arg4")]),t._v(" => "),a("code",[t._v('{"arg3":"value","arg4":""}')])]),t._v(" "),a("li",[a("code",[t._v("+zz:bar:arg3=value:arg4=true")]),t._v(" => "),a("code",[t._v('{"arg3":"value","arg4":"true"}')])]),t._v(" "),a("li",[a("code",[t._v("+zz:bar:arg3=value:arg4=false")]),t._v(" => "),a("code",[t._v('{"arg3":"value"}')])]),t._v(" "),a("li",[a("code",[t._v("+zz:bar:arg3=value:arg4=0")]),t._v(" => "),a("code",[t._v('{"arg3":"value"}')])])]),t._v(" "),a("h4",{attrs:{id:"argument-escape"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#argument-escape"}},[t._v("#")]),t._v(" Argument Escape")]),t._v(" "),a("p",[t._v("Some arguments may contain "),a("code",[t._v(":")]),t._v(", use "),a("code",[t._v("\\")]),t._v(" to escape,\nthis solution works for command line external arguments and annotations arguments.")]),t._v(" "),a("p",[t._v("Example:")]),t._v(" "),a("p",[a("code",[t._v("+zz:plugin:addr=localhost:8080")]),t._v(" -> "),a("code",[t._v("+zz:plugin:addr=localhost\\:8080")])]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("Escape principle")]),t._v(" "),a("p",[t._v("Parser replace "),a("code",[t._v("\\:")]),t._v(" with "),a("code",[t._v("\\u003A")]),t._v(" before annotation separating, and replace "),a("code",[t._v("\\u003A")]),t._v(" with "),a("code",[t._v(":")]),t._v(" as last.")])]),t._v(" "),a("h3",{attrs:{id:"declaration-object"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#declaration-object"}},[t._v("#")]),t._v(" Declaration Object")]),t._v(" "),a("p",[t._v("Annotation could be added on "),a("code",[t._v("Decl")]),t._v(" blocks, and also "),a("code",[t._v("Spec")]),t._v(" Object.")]),t._v(" "),a("p",[t._v("You can check out "),a("RouterLink",{attrs:{to:"/guide/how-it-works.html#Principle"}},[t._v("Principle")]),t._v(" to know about what is "),a("code",[t._v("Decl")]),t._v(" and "),a("code",[t._v("Spec")]),t._v(".")],1),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" t\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:foo")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\tT0 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\tT1 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:bar")]),t._v("\n\tT2 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:foo")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" T3 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("Annotations added on "),a("code",[t._v("Decl")]),t._v(", would be copied for all "),a("code",[t._v("Spec")]),t._v(" objects in "),a("code",[t._v("Decl")]),t._v(" blocks as follows:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" t\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:foo")]),t._v("\n\tT0 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:foo")]),t._v("\n\tT1 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:foo")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:bar")]),t._v("\n\tT2 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:foo")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" T3 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"multiline-annotation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#multiline-annotation"}},[t._v("#")]),t._v(" Multiline Annotation")]),t._v(" "),a("h4",{attrs:{id:"annotation-detect"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#annotation-detect"}},[t._v("#")]),t._v(" Annotation Detect")]),t._v(" "),a("p",[t._v("Lines starts with "),a("code",[t._v("+zz:")]),t._v(" (ignore whitespace) would be detected as annotations.")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n+zz:foo  <- annotation\n  +zz:foo  <- annotation\n x +zoo:foo <- not\n//   +zoo:foo  <- not\n*/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" T1 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:foo  <- annotation")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   +zoo:  <- annotation")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//   +zoo-  <- not")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// x +zoo:foo <- not")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" T2 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"repeat-annotations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#repeat-annotations"}},[t._v("#")]),t._v(" Repeat Annotations")]),t._v(" "),a("p",[t._v("Object could have multi annotations added, and these annotations may contains repeat plugins.\nIt would not be considered as any exception.")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:foo")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:bar")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:bar:filename=./bar")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" T "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("How to handle repeat annotations is based on plugin implement and usage.")]),t._v(" "),a("h2",{attrs:{id:"conventions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#conventions"}},[t._v("#")]),t._v(" Conventions")]),t._v(" "),a("h3",{attrs:{id:"about-filepath-and-filename"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#about-filepath-and-filename"}},[t._v("#")]),t._v(" about filepath and filename")]),t._v(" "),a("p",[t._v("plugins may have arguments for filename as follows:")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:api:./")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:impl:./impl.go")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:wire:inject=/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" API "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("These filepath should follow these rules:")]),t._v(" "),a("p",[t._v("Example based on directory tree below:")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("/go/src/project/\n├── go.mod\n└── types\n    └── api.go\n")])])]),a("h4",{attrs:{id:"_1-if-ends-with-go-use-it-to-generate-go-file"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-if-ends-with-go-use-it-to-generate-go-file"}},[t._v("#")]),t._v(" 1. If ends with "),a("code",[t._v(".go")]),t._v(", use it to generate go file.")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// /go/src/project/types/api.go")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:api:./api.go")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" API "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("This example would get filename "),a("code",[t._v("api.go")]),t._v(".")]),t._v(" "),a("h4",{attrs:{id:"_2-if-not-ends-with-go-plugin-would-provide-a-default-filename"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-if-not-ends-with-go-plugin-would-provide-a-default-filename"}},[t._v("#")]),t._v(" 2. If not ends with "),a("code",[t._v(".go")]),t._v(", plugin would provide a default filename")]),t._v(" "),a("p",[t._v("Most of the plugin default filename formatted as  "),a("code",[t._v("zzgen.${plugin}.go")]),t._v(".")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// /go/src/project/types/api.go")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:api:./")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" API "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("This example would get filename "),a("code",[t._v("zzgen.api.go")])]),t._v(" "),a("h4",{attrs:{id:"_3-most-of-the-filename-arguments-support-templating"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-most-of-the-filename-arguments-support-templating"}},[t._v("#")]),t._v(" 3. Most of the filename arguments support templating")]),t._v(" "),a("p",[t._v("You could use meta info from annotated object like "),a("code",[t._v("Name")]),t._v(" "),a("code",[t._v("Package")]),t._v(" to do templating.")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/go-zing/gozz-core/blob/main/generate.go#L32",target:"_blank",rel:"noopener noreferrer"}},[t._v("String functions provided"),a("OutboundLink")],1),t._v(" in core\nlike "),a("code",[t._v("snake / camel ...")])]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// /go/src/project/types/api.go")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:api:./{{ lower .Name }}.go")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" Foo "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("This example would get filename "),a("code",[t._v("foo.go")])]),t._v(" "),a("h4",{attrs:{id:"_4-if-filename-is-relative-path-related-to-annotated-file"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-if-filename-is-relative-path-related-to-annotated-file"}},[t._v("#")]),t._v(" 4. If filename is relative path. Related to annotated file.")]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// /go/src/project/types/api.go")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:api:./apix.go")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" API "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("This example would get full filepath "),a("code",[t._v("/go/src/project/types/apix.go")])]),t._v(" "),a("br"),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// /go/src/project/types/api.go")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:api:./apix")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" API "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("This example would get filename "),a("code",[t._v("zzgen.api.go")]),t._v(" because it does not have "),a("code",[t._v(".go")]),t._v(" suffix.")]),t._v(" "),a("p",[t._v("And got full filepath  "),a("code",[t._v("/go/src/project/types/apix/zzgen.api.go")])]),t._v(" "),a("h4",{attrs:{id:"_5-if-filepath-is-absolute-related-to-annotated-file-module-root"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-if-filepath-is-absolute-related-to-annotated-file-module-root"}},[t._v("#")]),t._v(" 5. If filepath is absolute. Related to annotated file "),a("code",[t._v("module")]),t._v(" root.")]),t._v(" "),a("p",[a("code",[t._v("module")]),t._v(" root is detected by command "),a("code",[t._v("go env GOMOD")])]),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// /go/src/project/types/api.go")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:api:/apix.go")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" API "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("This example would get filepath "),a("code",[t._v("/go/src/project/apix.go")]),t._v(".")]),t._v(" "),a("br"),t._v(" "),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// /go/src/project/types/api.go")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:api:/apix")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" API "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("This example would get filepath  "),a("code",[t._v("/go/src/project/apix/zzgen.api.go")])]),t._v(" "),a("br"),t._v(" "),a("p",[t._v("If directory "),a("code",[t._v("types")]),t._v(" contains a sub "),a("code",[t._v("module")]),t._v(":")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("/go/src/project/\n├── go.mod\n└── types\n    ├── api.go\n    └── go.mod\n")])])]),a("div",{staticClass:"language-go extra-class"},[a("pre",{pre:!0,attrs:{class:"language-go"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// /go/src/project/types/api.go")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// +zz:api:/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("type")]),t._v(" API "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[t._v("This example would get filepath "),a("code",[t._v("/go/src/project/types/zzgen.api.go")])]),t._v(" "),a("h3",{attrs:{id:"custom-template"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#custom-template"}},[t._v("#")]),t._v(" Custom Template")]),t._v(" "),a("p",[t._v("For most of the code generation, we would check whether exist file named "),a("code",[t._v("${filename}.impl")]),t._v(" in directory.")]),t._v(" "),a("p",[t._v("If it exists, it would be used as generate template. Else, a builtin template with this name would be generated.")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("To reset template, please delete existed "),a("code",[t._v(".tmpl")]),t._v(" file and regenerate builtin template.")])])])}),[],!1,null,null,null);a.default=n.exports}}]);