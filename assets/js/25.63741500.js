(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{308:function(a,t,s){"use strict";s.r(t);var e=s(14),n=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h1",{attrs:{id:"快速上手"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#快速上手"}},[a._v("#")]),a._v(" 快速上手")]),a._v(" "),t("p",[t("code",[a._v("Gozz")]),a._v(" 命令行工具基于 "),t("a",{attrs:{href:"https://github.com/spf13/cobra",target:"_blank",rel:"noopener noreferrer"}},[a._v("cobra"),t("OutboundLink")],1),a._v(" 构建，命令行交互语法遵循格式：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("gozz "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("--GLOBAL-FLAG"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("COMMAND"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("--COMMAND-FLAG"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("ARG"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])]),t("h2",{attrs:{id:"环境"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#环境"}},[a._v("#")]),a._v(" 环境")]),a._v(" "),t("p",[t("code",[a._v("Gozz")]),a._v(" 在启动时会自动加载用户目录 "),t("code",[a._v("~/.gozz/plugins/")]),a._v(" 下的 "),t("code",[a._v(".so")]),a._v(" 插件，期间发生的异常会被忽略。")]),a._v(" "),t("h2",{attrs:{id:"指令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#指令"}},[a._v("#")]),a._v(" 指令")]),a._v(" "),t("p",[t("code",[a._v("Gozz")]),a._v(" 支持以下指令：")]),a._v(" "),t("h3",{attrs:{id:"gozz-list"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gozz-list"}},[a._v("#")]),a._v(" "),t("code",[a._v("gozz list")])]),a._v(" "),t("p",[a._v("该指令会列出已经被正确注册的插件，并且输出插件和参数相关的介绍到控制台，使用者也可以通过该指令来检查插件是否被正确加载。")]),a._v(" "),t("h3",{attrs:{id:"gozz-run"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gozz-run"}},[a._v("#")]),a._v(" "),t("code",[a._v("gozz run")])]),a._v(" "),t("p",[a._v("用法：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("gozz run "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("--plugin/-p"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("filename"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" \n")])])]),t("p",[a._v("该指令会启动对 "),t("code",[a._v("filename")]),a._v(" 文件或目录注解的分析，\n并将分析的结构化注解及上下文，提交至指定的若干插件进行下一步工作。这将会是使用者最常用的指令。")]),a._v(" "),t("h4",{attrs:{id:"参数-filename"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参数-filename"}},[a._v("#")]),a._v(" 参数 "),t("code",[a._v("filename")])]),a._v(" "),t("p",[a._v("当 "),t("code",[a._v("filename")]),a._v(" 为文件时，解析器只会解析当前单个文件内容")]),a._v(" "),t("p",[a._v("当 "),t("code",[a._v("filename")]),a._v(" 为目录时，解析器会遍历该目录以及嵌套子目录")]),a._v(" "),t("h4",{attrs:{id:"可选参数-plugin-p-name-options"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#可选参数-plugin-p-name-options"}},[a._v("#")]),a._v(" 可选参数 "),t("code",[a._v('--plugin / -p "name:options..."')])]),a._v(" "),t("p",[a._v("使用 "),t("code",[a._v("gozz run")]),a._v(" 必须指定 1 ~ N 个插件运行")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 指定单个插件")]),a._v("\ngozz run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("--plugin")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"foo"')]),a._v(" ./\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 简写参数")]),a._v("\ngozz run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"foo"')]),a._v(" ./\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 指定多个插件")]),a._v("\ngozz run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"foo"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"bar"')]),a._v(" ./\n")])])]),t("p",[a._v("单次运行指定多个插件时，插件们会按参数顺序串行执行，尽管每个插件运行前都会重新进行文件解析，\n但基于文件元信息的版本解析缓存将会在进程内复用，因此同时指定多个插件会有更好体验。")]),a._v(" "),t("hr"),a._v(" "),t("p",[a._v("在指定插件名后方使用 "),t("code",[a._v(":")]),a._v(" 间隔，可以通过该参数追加插件默认选项：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 使用foo插件 并为所有匹配的注解 添加两个默认选项 [ key:value key2:value2 ]")]),a._v("\ngozz run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"foo:key=value:key2=value2"')]),a._v(" ./ \n")])])]),t("p",[a._v("注解 "),t("code",[a._v("+zz:foo:key=value3")]),a._v(" 添加默认选项 "),t("code",[a._v("key=value:key2=value2")]),a._v(" 后 等价于：")]),a._v(" "),t("p",[t("code",[a._v("+zz:foo:key=value3(已有值未被覆盖):key2=value2(缺省值使用默认)")])]),a._v(" "),t("h3",{attrs:{id:"wip-gozz-install"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#wip-gozz-install"}},[a._v("#")]),a._v(" [WIP] "),t("code",[a._v("gozz install")])]),a._v(" "),t("p",[a._v("用法")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[a._v("gozz "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("--output/-o"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("--filename/-f"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("repository"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" \n")])])]),t("p",[a._v("运行该指令会尝试将提供的 "),t("code",[a._v("repository")]),a._v(" 代码编译为 "),t("code",[a._v(".so")]),a._v(" 插件文件，并安装至用户目录 "),t("code",[a._v("~/.gozz/plugins")]),a._v(" 下。")]),a._v(" "),t("h4",{attrs:{id:"参数-repository"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#参数-repository"}},[a._v("#")]),a._v(" 参数 "),t("code",[a._v("repository")])]),a._v(" "),t("p",[a._v("当 "),t("code",[a._v("repository")]),a._v(" 带有网络协议前缀时，如 "),t("code",[a._v("ssh://、git://、http://、https://")]),a._v(" ，会使用 "),t("code",[a._v("git")]),a._v(" 进行仓库远程下载，\n否则会视为本地文件路径。")]),a._v(" "),t("h4",{attrs:{id:"可选参数-output-o-filename"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#可选参数-output-o-filename"}},[a._v("#")]),a._v(" 可选参数 "),t("code",[a._v('--output / -o "filename"')])]),a._v(" "),t("p",[a._v("指定该参数时，编译结果会输出为指定文件名，不再自动安装到用户目录。")]),a._v(" "),t("h4",{attrs:{id:"可选参数-filename-f-filename"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#可选参数-filename-f-filename"}},[a._v("#")]),a._v(" 可选参数 "),t("code",[a._v('--filename / -f "filename"')])]),a._v(" "),t("p",[a._v("指定该参数时，编译会使用该参数作为相对路径进行编译。")]),a._v(" "),t("hr"),a._v(" "),t("p",[a._v("使用该指令成功安装外部插件需要满足以下前提：")]),a._v(" "),t("ul",[t("li",[a._v("编译当前 "),t("code",[a._v("gozz")]),a._v(" 使用的 Golang 版本和当前执行环境 Golang 版本一致。")]),a._v(" "),t("li",[a._v("指定 "),t("code",[a._v("repository")]),a._v(" 依赖兼容当前 "),t("code",[a._v("gozz")]),a._v(" 版本使用的 "),t("code",[a._v("gozz-core")]),a._v("。")]),a._v(" "),t("li",[a._v("其他影响 Golang 插件机制的环境因素：\n"),t("a",{attrs:{href:"https://tonybai.com/2021/07/19/understand-go-plugin/",target:"_blank",rel:"noopener noreferrer"}},[a._v("一文搞懂Go语言的plugin"),t("OutboundLink")],1),a._v("。")])]),a._v(" "),t("h2",{attrs:{id:"全局参数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#全局参数"}},[a._v("#")]),a._v(" 全局参数")]),a._v(" "),t("h3",{attrs:{id:"x-extension-filename"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#x-extension-filename"}},[a._v("#")]),a._v(" "),t("code",[a._v("-x / --extension [filename]")])]),a._v(" "),t("p",[a._v("例：")]),a._v(" "),t("div",{staticClass:"language-shell extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 运行 list")]),a._v("\ngozz "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-x")]),a._v(" plugin.so list\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 运行 run")]),a._v("\ngozz "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-x")]),a._v(" plugin.so run "),t("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-p")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"plugin"')]),a._v(" ./\n")])])]),t("p",[a._v("使用该参数可以在工具启动时 额外加载指定文件路径的 "),t("code",[a._v(".so")]),a._v(" 插件，通过此方式加载的插件如果发生异常，会输出异常信息并立即退出进程。")]),a._v(" "),t("h2",{attrs:{id:"大于配置的约定"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#大于配置的约定"}},[a._v("#")]),a._v(" 大于配置的约定")])])}),[],!1,null,null,null);t.default=n.exports}}]);